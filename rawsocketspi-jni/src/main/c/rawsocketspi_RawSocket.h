/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class rawsocketspi_RawSocket */

#ifndef _Included_rawsocketspi_RawSocket
#define _Included_rawsocketspi_RawSocket
#ifdef __cplusplus
extern "C" {
#endif
#undef rawsocketspi_RawSocket_EPOLLOP_EPOLL_CTL_ADD
#define rawsocketspi_RawSocket_EPOLLOP_EPOLL_CTL_ADD 1L
#undef rawsocketspi_RawSocket_EPOLLOP_EPOLL_CTL_MOD
#define rawsocketspi_RawSocket_EPOLLOP_EPOLL_CTL_MOD 2L
#undef rawsocketspi_RawSocket_EPOLLOP_EPOLL_CTL_DEL
#define rawsocketspi_RawSocket_EPOLLOP_EPOLL_CTL_DEL 3L
#undef rawsocketspi_RawSocket_EPOLLTYPE_EPOLLIN
#define rawsocketspi_RawSocket_EPOLLTYPE_EPOLLIN 1L
#undef rawsocketspi_RawSocket_EPOLLTYPE_EPOLLET
#define rawsocketspi_RawSocket_EPOLLTYPE_EPOLLET 2L
/*
 * Class:     rawsocketspi_RawSocket
 * Method:    nativeInit
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_rawsocketspi_RawSocket_nativeInit
  (JNIEnv *, jclass);

/*
 * Class:     rawsocketspi_RawSocket
 * Method:    nativeOpen
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_rawsocketspi_RawSocket_nativeOpen
  (JNIEnv *, jclass, jstring);

/*
 * Class:     rawsocketspi_RawSocket
 * Method:    nativeClose
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_rawsocketspi_RawSocket_nativeClose
  (JNIEnv *, jclass, jint);

/*
 * Class:     rawsocketspi_RawSocket
 * Method:    nativeRead
 * Signature: (ILjava/nio/ByteBuffer;II)I
 */
JNIEXPORT jint JNICALL Java_rawsocketspi_RawSocket_nativeRead
  (JNIEnv *, jclass, jint, jobject, jint, jint);

/*
 * Class:     rawsocketspi_RawSocket
 * Method:    nativeWrite
 * Signature: (ILjava/nio/ByteBuffer;II)I
 */
JNIEXPORT jint JNICALL Java_rawsocketspi_RawSocket_nativeWrite
  (JNIEnv *, jclass, jint, jobject, jint, jint);

/*
 * Class:     rawsocketspi_RawSocket
 * Method:    nativeGetInterfaceNames
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_rawsocketspi_RawSocket_nativeGetInterfaceNames
  (JNIEnv *, jclass);

/*
 * Class:     rawsocketspi_RawSocket
 * Method:    nativeGetHardwareAddress
 * Signature: (ILjava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_rawsocketspi_RawSocket_nativeGetHardwareAddress
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     rawsocketspi_RawSocket
 * Method:    nativeEpollCreate
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_rawsocketspi_RawSocket_nativeEpollCreate
  (JNIEnv *, jclass, jint);

/*
 * Class:     rawsocketspi_RawSocket
 * Method:    nativeEpollCreate1
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_rawsocketspi_RawSocket_nativeEpollCreate1
  (JNIEnv *, jclass, jint);

/*
 * Class:     rawsocketspi_RawSocket
 * Method:    nativeEpollCtl
 * Signature: (IIILrawsocketspi/RawSocket/EpollEvent;)I
 */
JNIEXPORT jint JNICALL Java_rawsocketspi_RawSocket_nativeEpollCtl
  (JNIEnv *, jclass, jint, jint, jint, jobject);

/*
 * Class:     rawsocketspi_RawSocket
 * Method:    nativeEpollWait
 * Signature: (I[Lrawsocketspi/RawSocket/EpollEvent;II)I
 */
JNIEXPORT jint JNICALL Java_rawsocketspi_RawSocket_nativeEpollWait
  (JNIEnv *, jclass, jint, jobjectArray, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
